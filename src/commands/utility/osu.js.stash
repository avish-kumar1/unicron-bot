
const { Message } = require('discord.js');
const Client = require('../../classes/Unicron');
const BaseCommand = require('../../classes/BaseCommand');
const fetch = require('node-fetch');

module.exports = class extends BaseCommand {
    constructor() {
        super({
            config: {
                name: 'osu',
                description: 'Responds with information about an osu user!',
                permission: 'User',
            },
            options: {
                aliases: [],
                clientPermissions: [],
                cooldown: 3,
                nsfwCommand: false,
                args: true,
                usage: 'osu <User>',
                donatorOnly: false,
                premiumServer: false,
            }
        });
        this.apikey = process.env.OSU_KEY || '';
    }
    /**
     * @returns {Promise<Message|boolean>}
     * @param {Client} client 
     * @param {Message} message 
     * @param {Array<string>} args 
     */
    async run(client, message, args) {
        const user = encodeURIComponent(args[0]);
        const queries = `?u=${user}?k=`;
        try {
            const response = await fetch(`https://osu.ppy.sh/api/get_user${queries}`);
            const body = await response.json();
            console.log(body);
			if (!body.length) return message.channel.send('Could not find any results.');
            const data = body[0];
            message.channel.send(new MessageEmbed()
				.setColor(0xFF66AA)
				.setAuthor('osu!', 'https://i.imgur.com/hWrw2Sv.png', 'https://osu.ppy.sh/')
				.addField('❯ Username', data.username, true)
				.addField('❯ ID', data.user_id, true)
				.addField('❯ Level', data.level || '???', true)
				.addField('❯ Accuracy', data.accuracy ? `${Math.round(data.accuracy)}%` : '???', true)
				.addField('❯ Rank', data.pp_rank ? client.formatNumber(data.pp_rank) : '???', true)
				.addField('❯ Play Count', data.playcount ? client.formatNumber(data.playcount) : '???', true)
				.addField('❯ Country', data.country || '???', true)
				.addField('❯ Ranked Score', data.ranked_score ? client.formatNumber(data.ranked_score) : '???', true)
				.addField('❯ Total Score', data.total_score ? client.formatNumber(data.total_score) : '???', true)
				.addField('❯ SS', data.count_rank_ss ? client.formatNumber(data.count_rank_ss) : '???', true)
				.addField('❯ S', data.count_rank_s ? client.formatNumber(data.count_rank_s) : '???', true)
                .addField('❯ A', data.count_rank_a ? client.formatNumber(data.count_rank_a) : '???', true)
            );
		} catch (err) {
			return message.channel.send(`Oh no, an error occurred: \`${err.message}\`. Try again later!`);
		}
    }
}